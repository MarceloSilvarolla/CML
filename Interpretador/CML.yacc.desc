
state 0:

	program : . declaration_or_function_definition_list 

	VOID	shift 13
	INT	shift 12
	REAL	shift 11
	CHAR	shift 10
	BOOL	shift 9
	STRING	shift 8
	DATASET	shift 7
	MODEL	shift 6

	declaration	goto 5
	type_specifier	goto 4
	function_definition	goto 3
	program	goto 140
	declaration_or_function_definition_list	goto 2
	declaration_or_function_definition	goto 1

	.	error


state 1:

	declaration_or_function_definition_list : declaration_or_function_definition .  (reduce by rule 76)

	EOF	reduce by rule 76
	VOID	reduce by rule 76
	INT	reduce by rule 76
	REAL	reduce by rule 76
	CHAR	reduce by rule 76
	BOOL	reduce by rule 76
	STRING	reduce by rule 76
	DATASET	reduce by rule 76
	MODEL	reduce by rule 76


	.	error


state 2:

	program : declaration_or_function_definition_list .  (reduce by rule 75)
	declaration_or_function_definition_list : declaration_or_function_definition_list . declaration_or_function_definition 

	EOF	reduce by rule 75
	VOID	shift 13
	INT	shift 12
	REAL	shift 11
	CHAR	shift 10
	BOOL	shift 9
	STRING	shift 8
	DATASET	shift 7
	MODEL	shift 6

	declaration	goto 5
	type_specifier	goto 4
	function_definition	goto 3
	declaration_or_function_definition	goto 14

	.	error


state 3:

	declaration_or_function_definition : function_definition .  (reduce by rule 78)

	EOF	reduce by rule 78
	VOID	reduce by rule 78
	INT	reduce by rule 78
	REAL	reduce by rule 78
	CHAR	reduce by rule 78
	BOOL	reduce by rule 78
	STRING	reduce by rule 78
	DATASET	reduce by rule 78
	MODEL	reduce by rule 78


	.	error


state 4:

	declaration : type_specifier . IDENTIFIER SEMICOLON 
	declaration : type_specifier . IDENTIFIER EQUALS expression SEMICOLON 
	type_specifier : type_specifier . LSQUARE_BRACKET RSQUARE_BRACKET 
	function_definition : type_specifier . IDENTIFIER LPAREN RPAREN compound_command 
	function_definition : type_specifier . IDENTIFIER LPAREN parameter_declaration_list RPAREN compound_command 

	IDENTIFIER	shift 16
	LSQUARE_BRACKET	shift 15


	.	error


state 5:

	declaration_or_function_definition : declaration .  (reduce by rule 79)

	EOF	reduce by rule 79
	VOID	reduce by rule 79
	INT	reduce by rule 79
	REAL	reduce by rule 79
	CHAR	reduce by rule 79
	BOOL	reduce by rule 79
	STRING	reduce by rule 79
	DATASET	reduce by rule 79
	MODEL	reduce by rule 79


	.	error


state 6:

	type_specifier : MODEL .  (reduce by rule 71)

	IDENTIFIER	reduce by rule 71
	LSQUARE_BRACKET	reduce by rule 71


	.	error


state 7:

	type_specifier : DATASET .  (reduce by rule 70)

	IDENTIFIER	reduce by rule 70
	LSQUARE_BRACKET	reduce by rule 70


	.	error


state 8:

	type_specifier : STRING .  (reduce by rule 69)

	IDENTIFIER	reduce by rule 69
	LSQUARE_BRACKET	reduce by rule 69


	.	error


state 9:

	type_specifier : BOOL .  (reduce by rule 68)

	IDENTIFIER	reduce by rule 68
	LSQUARE_BRACKET	reduce by rule 68


	.	error


state 10:

	type_specifier : CHAR .  (reduce by rule 65)

	IDENTIFIER	reduce by rule 65
	LSQUARE_BRACKET	reduce by rule 65


	.	error


state 11:

	type_specifier : REAL .  (reduce by rule 67)

	IDENTIFIER	reduce by rule 67
	LSQUARE_BRACKET	reduce by rule 67


	.	error


state 12:

	type_specifier : INT .  (reduce by rule 66)

	IDENTIFIER	reduce by rule 66
	LSQUARE_BRACKET	reduce by rule 66


	.	error


state 13:

	type_specifier : VOID .  (reduce by rule 64)

	IDENTIFIER	reduce by rule 64
	LSQUARE_BRACKET	reduce by rule 64


	.	error


state 14:

	declaration_or_function_definition_list : declaration_or_function_definition_list declaration_or_function_definition .  (reduce by rule 77)

	EOF	reduce by rule 77
	VOID	reduce by rule 77
	INT	reduce by rule 77
	REAL	reduce by rule 77
	CHAR	reduce by rule 77
	BOOL	reduce by rule 77
	STRING	reduce by rule 77
	DATASET	reduce by rule 77
	MODEL	reduce by rule 77


	.	error


state 15:

	type_specifier : type_specifier LSQUARE_BRACKET . RSQUARE_BRACKET 

	RSQUARE_BRACKET	shift 17


	.	error


state 16:

	declaration : type_specifier IDENTIFIER . SEMICOLON 
	declaration : type_specifier IDENTIFIER . EQUALS expression SEMICOLON 
	function_definition : type_specifier IDENTIFIER . LPAREN RPAREN compound_command 
	function_definition : type_specifier IDENTIFIER . LPAREN parameter_declaration_list RPAREN compound_command 

	LPAREN	shift 20
	SEMICOLON	shift 19
	EQUALS	shift 18


	.	error


state 17:

	type_specifier : type_specifier LSQUARE_BRACKET RSQUARE_BRACKET .  (reduce by rule 72)

	IDENTIFIER	reduce by rule 72
	LSQUARE_BRACKET	reduce by rule 72


	.	error


state 18:

	declaration : type_specifier IDENTIFIER EQUALS . expression SEMICOLON 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 29
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 19:

	declaration : type_specifier IDENTIFIER SEMICOLON .  (reduce by rule 59)

	EOF	reduce by rule 59
	IF	reduce by rule 59
	WHILE	reduce by rule 59
	RETURN	reduce by rule 59
	SKIP	reduce by rule 59
	VOID	reduce by rule 59
	INT	reduce by rule 59
	REAL	reduce by rule 59
	CHAR	reduce by rule 59
	BOOL	reduce by rule 59
	STRING	reduce by rule 59
	DATASET	reduce by rule 59
	MODEL	reduce by rule 59
	IDENTIFIER	reduce by rule 59
	INT_LITERAL	reduce by rule 59
	REAL_LITERAL	reduce by rule 59
	BOOL_LITERAL	reduce by rule 59
	CHAR_LITERAL	reduce by rule 59
	STRING_LITERAL	reduce by rule 59
	NEG_OP	reduce by rule 59
	LCURLY_BRACKET	reduce by rule 59
	RCURLY_BRACKET	reduce by rule 59
	LPAREN	reduce by rule 59
	SEMICOLON	reduce by rule 59
	MINUS	reduce by rule 59


	.	error


state 20:

	function_definition : type_specifier IDENTIFIER LPAREN . RPAREN compound_command 
	function_definition : type_specifier IDENTIFIER LPAREN . parameter_declaration_list RPAREN compound_command 

	VOID	shift 13
	INT	shift 12
	REAL	shift 11
	CHAR	shift 10
	BOOL	shift 9
	STRING	shift 8
	DATASET	shift 7
	MODEL	shift 6
	RPAREN	shift 45

	parameter_declaration_list	goto 44
	parameter_declaration	goto 43
	type_specifier	goto 42

	.	error


state 21:

	unary_minus_expression : neg_expression .  (reduce by rule 37)

	OR_OP	reduce by rule 37
	AND_OP	reduce by rule 37
	EQ_OP	reduce by rule 37
	NE_OP	reduce by rule 37
	LT_OP	reduce by rule 37
	LE_OP	reduce by rule 37
	GT_OP	reduce by rule 37
	GE_OP	reduce by rule 37
	RCURLY_BRACKET	reduce by rule 37
	RSQUARE_BRACKET	reduce by rule 37
	RPAREN	reduce by rule 37
	SEMICOLON	reduce by rule 37
	COMMA	reduce by rule 37
	PLUS	reduce by rule 37
	MINUS	reduce by rule 37
	TIMES	reduce by rule 37
	DIVIDED	reduce by rule 37


	.	error


state 22:

	multiplicative_expression : unary_minus_expression .  (reduce by rule 34)

	OR_OP	reduce by rule 34
	AND_OP	reduce by rule 34
	EQ_OP	reduce by rule 34
	NE_OP	reduce by rule 34
	LT_OP	reduce by rule 34
	LE_OP	reduce by rule 34
	GT_OP	reduce by rule 34
	GE_OP	reduce by rule 34
	RCURLY_BRACKET	reduce by rule 34
	RSQUARE_BRACKET	reduce by rule 34
	RPAREN	reduce by rule 34
	SEMICOLON	reduce by rule 34
	COMMA	reduce by rule 34
	PLUS	reduce by rule 34
	MINUS	reduce by rule 34
	TIMES	reduce by rule 34
	DIVIDED	reduce by rule 34


	.	error


state 23:

	additive_expression : multiplicative_expression .  (reduce by rule 31)
	multiplicative_expression : multiplicative_expression . TIMES unary_minus_expression 
	multiplicative_expression : multiplicative_expression . DIVIDED unary_minus_expression 

	OR_OP	reduce by rule 31
	AND_OP	reduce by rule 31
	EQ_OP	reduce by rule 31
	NE_OP	reduce by rule 31
	LT_OP	reduce by rule 31
	LE_OP	reduce by rule 31
	GT_OP	reduce by rule 31
	GE_OP	reduce by rule 31
	RCURLY_BRACKET	reduce by rule 31
	RSQUARE_BRACKET	reduce by rule 31
	RPAREN	reduce by rule 31
	SEMICOLON	reduce by rule 31
	COMMA	reduce by rule 31
	PLUS	reduce by rule 31
	MINUS	reduce by rule 31
	TIMES	shift 47
	DIVIDED	shift 46


	.	error


state 24:

	relational_expression : additive_expression .  (reduce by rule 24)
	relational_expression : additive_expression . LT_OP additive_expression 
	relational_expression : additive_expression . GT_OP additive_expression 
	relational_expression : additive_expression . LE_OP additive_expression 
	relational_expression : additive_expression . GE_OP additive_expression 
	relational_expression : additive_expression . EQ_OP additive_expression 
	relational_expression : additive_expression . NE_OP additive_expression 
	additive_expression : additive_expression . PLUS multiplicative_expression 
	additive_expression : additive_expression . MINUS multiplicative_expression 

	OR_OP	reduce by rule 24
	AND_OP	reduce by rule 24
	EQ_OP	shift 55
	NE_OP	shift 54
	LT_OP	shift 53
	LE_OP	shift 52
	GT_OP	shift 51
	GE_OP	shift 50
	RCURLY_BRACKET	reduce by rule 24
	RSQUARE_BRACKET	reduce by rule 24
	RPAREN	reduce by rule 24
	SEMICOLON	reduce by rule 24
	COMMA	reduce by rule 24
	PLUS	shift 49
	MINUS	shift 48


	.	error


state 25:

	logical_and_expression : relational_expression .  (reduce by rule 22)

	OR_OP	reduce by rule 22
	AND_OP	reduce by rule 22
	RCURLY_BRACKET	reduce by rule 22
	RSQUARE_BRACKET	reduce by rule 22
	RPAREN	reduce by rule 22
	SEMICOLON	reduce by rule 22
	COMMA	reduce by rule 22


	.	error


state 26:

	logical_or_expression : logical_and_expression .  (reduce by rule 20)
	logical_and_expression : logical_and_expression . AND_OP relational_expression 

	OR_OP	reduce by rule 20
	AND_OP	shift 56
	RCURLY_BRACKET	reduce by rule 20
	RSQUARE_BRACKET	reduce by rule 20
	RPAREN	reduce by rule 20
	SEMICOLON	reduce by rule 20
	COMMA	reduce by rule 20


	.	error


state 27:

	expression : logical_or_expression .  (reduce by rule 15)
	logical_or_expression : logical_or_expression . OR_OP logical_and_expression 

	OR_OP	shift 57
	RCURLY_BRACKET	reduce by rule 15
	RSQUARE_BRACKET	reduce by rule 15
	RPAREN	reduce by rule 15
	SEMICOLON	reduce by rule 15
	COMMA	reduce by rule 15


	.	error


state 28:

	primary_expression : array_access .  (reduce by rule 5)
	expression : array_access . EQUALS expression 
	array_access : array_access . LSQUARE_BRACKET expression RSQUARE_BRACKET 

	OR_OP	reduce by rule 5
	AND_OP	reduce by rule 5
	EQ_OP	reduce by rule 5
	NE_OP	reduce by rule 5
	LT_OP	reduce by rule 5
	LE_OP	reduce by rule 5
	GT_OP	reduce by rule 5
	GE_OP	reduce by rule 5
	RCURLY_BRACKET	reduce by rule 5
	LSQUARE_BRACKET	shift 59
	RSQUARE_BRACKET	reduce by rule 5
	RPAREN	reduce by rule 5
	SEMICOLON	reduce by rule 5
	COMMA	reduce by rule 5
	EQUALS	shift 58
	PLUS	reduce by rule 5
	MINUS	reduce by rule 5
	TIMES	reduce by rule 5
	DIVIDED	reduce by rule 5


	.	error


state 29:

	declaration : type_specifier IDENTIFIER EQUALS expression . SEMICOLON 

	SEMICOLON	shift 60


	.	error


state 30:

	primary_expression : literal .  (reduce by rule 1)

	OR_OP	reduce by rule 1
	AND_OP	reduce by rule 1
	EQ_OP	reduce by rule 1
	NE_OP	reduce by rule 1
	LT_OP	reduce by rule 1
	LE_OP	reduce by rule 1
	GT_OP	reduce by rule 1
	GE_OP	reduce by rule 1
	RCURLY_BRACKET	reduce by rule 1
	RSQUARE_BRACKET	reduce by rule 1
	RPAREN	reduce by rule 1
	SEMICOLON	reduce by rule 1
	COMMA	reduce by rule 1
	PLUS	reduce by rule 1
	MINUS	reduce by rule 1
	TIMES	reduce by rule 1
	DIVIDED	reduce by rule 1


	.	error


state 31:

	neg_expression : primary_expression .  (reduce by rule 39)

	OR_OP	reduce by rule 39
	AND_OP	reduce by rule 39
	EQ_OP	reduce by rule 39
	NE_OP	reduce by rule 39
	LT_OP	reduce by rule 39
	LE_OP	reduce by rule 39
	GT_OP	reduce by rule 39
	GE_OP	reduce by rule 39
	RCURLY_BRACKET	reduce by rule 39
	RSQUARE_BRACKET	reduce by rule 39
	RPAREN	reduce by rule 39
	SEMICOLON	reduce by rule 39
	COMMA	reduce by rule 39
	PLUS	reduce by rule 39
	MINUS	reduce by rule 39
	TIMES	reduce by rule 39
	DIVIDED	reduce by rule 39


	.	error


state 32:

	unary_minus_expression : MINUS . neg_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	neg_expression	goto 61

	.	error


state 33:

	primary_expression : LPAREN . expression RPAREN 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 64
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 34:

	primary_expression : LCURLY_BRACKET . RCURLY_BRACKET 
	primary_expression : LCURLY_BRACKET . expression_list RCURLY_BRACKET 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	RCURLY_BRACKET	shift 67
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression_list	goto 66
	expression	goto 65
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 35:

	neg_expression : NEG_OP . neg_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	neg_expression	goto 68

	.	error


state 36:

	literal : STRING_LITERAL .  (reduce by rule 12)

	OR_OP	reduce by rule 12
	AND_OP	reduce by rule 12
	EQ_OP	reduce by rule 12
	NE_OP	reduce by rule 12
	LT_OP	reduce by rule 12
	LE_OP	reduce by rule 12
	GT_OP	reduce by rule 12
	GE_OP	reduce by rule 12
	RCURLY_BRACKET	reduce by rule 12
	RSQUARE_BRACKET	reduce by rule 12
	RPAREN	reduce by rule 12
	SEMICOLON	reduce by rule 12
	COMMA	reduce by rule 12
	PLUS	reduce by rule 12
	MINUS	reduce by rule 12
	TIMES	reduce by rule 12
	DIVIDED	reduce by rule 12


	.	error


state 37:

	literal : CHAR_LITERAL .  (reduce by rule 11)

	OR_OP	reduce by rule 11
	AND_OP	reduce by rule 11
	EQ_OP	reduce by rule 11
	NE_OP	reduce by rule 11
	LT_OP	reduce by rule 11
	LE_OP	reduce by rule 11
	GT_OP	reduce by rule 11
	GE_OP	reduce by rule 11
	RCURLY_BRACKET	reduce by rule 11
	RSQUARE_BRACKET	reduce by rule 11
	RPAREN	reduce by rule 11
	SEMICOLON	reduce by rule 11
	COMMA	reduce by rule 11
	PLUS	reduce by rule 11
	MINUS	reduce by rule 11
	TIMES	reduce by rule 11
	DIVIDED	reduce by rule 11


	.	error


state 38:

	literal : BOOL_LITERAL .  (reduce by rule 10)

	OR_OP	reduce by rule 10
	AND_OP	reduce by rule 10
	EQ_OP	reduce by rule 10
	NE_OP	reduce by rule 10
	LT_OP	reduce by rule 10
	LE_OP	reduce by rule 10
	GT_OP	reduce by rule 10
	GE_OP	reduce by rule 10
	RCURLY_BRACKET	reduce by rule 10
	RSQUARE_BRACKET	reduce by rule 10
	RPAREN	reduce by rule 10
	SEMICOLON	reduce by rule 10
	COMMA	reduce by rule 10
	PLUS	reduce by rule 10
	MINUS	reduce by rule 10
	TIMES	reduce by rule 10
	DIVIDED	reduce by rule 10


	.	error


state 39:

	literal : REAL_LITERAL .  (reduce by rule 9)

	OR_OP	reduce by rule 9
	AND_OP	reduce by rule 9
	EQ_OP	reduce by rule 9
	NE_OP	reduce by rule 9
	LT_OP	reduce by rule 9
	LE_OP	reduce by rule 9
	GT_OP	reduce by rule 9
	GE_OP	reduce by rule 9
	RCURLY_BRACKET	reduce by rule 9
	RSQUARE_BRACKET	reduce by rule 9
	RPAREN	reduce by rule 9
	SEMICOLON	reduce by rule 9
	COMMA	reduce by rule 9
	PLUS	reduce by rule 9
	MINUS	reduce by rule 9
	TIMES	reduce by rule 9
	DIVIDED	reduce by rule 9


	.	error


state 40:

	literal : INT_LITERAL .  (reduce by rule 8)

	OR_OP	reduce by rule 8
	AND_OP	reduce by rule 8
	EQ_OP	reduce by rule 8
	NE_OP	reduce by rule 8
	LT_OP	reduce by rule 8
	LE_OP	reduce by rule 8
	GT_OP	reduce by rule 8
	GE_OP	reduce by rule 8
	RCURLY_BRACKET	reduce by rule 8
	RSQUARE_BRACKET	reduce by rule 8
	RPAREN	reduce by rule 8
	SEMICOLON	reduce by rule 8
	COMMA	reduce by rule 8
	PLUS	reduce by rule 8
	MINUS	reduce by rule 8
	TIMES	reduce by rule 8
	DIVIDED	reduce by rule 8


	.	error


state 41:

	primary_expression : IDENTIFIER .  (reduce by rule 0)
	primary_expression : IDENTIFIER . LPAREN RPAREN 
	primary_expression : IDENTIFIER . LPAREN expression_list RPAREN 
	expression : IDENTIFIER . EQUALS expression 
	array_access : IDENTIFIER . LSQUARE_BRACKET expression RSQUARE_BRACKET 

	OR_OP	reduce by rule 0
	AND_OP	reduce by rule 0
	EQ_OP	reduce by rule 0
	NE_OP	reduce by rule 0
	LT_OP	reduce by rule 0
	LE_OP	reduce by rule 0
	GT_OP	reduce by rule 0
	GE_OP	reduce by rule 0
	RCURLY_BRACKET	reduce by rule 0
	LSQUARE_BRACKET	shift 71
	RSQUARE_BRACKET	reduce by rule 0
	LPAREN	shift 70
	RPAREN	reduce by rule 0
	SEMICOLON	reduce by rule 0
	COMMA	reduce by rule 0
	EQUALS	shift 69
	PLUS	reduce by rule 0
	MINUS	reduce by rule 0
	TIMES	reduce by rule 0
	DIVIDED	reduce by rule 0


	.	error


state 42:

	parameter_declaration : type_specifier . IDENTIFIER 
	type_specifier : type_specifier . LSQUARE_BRACKET RSQUARE_BRACKET 

	IDENTIFIER	shift 72
	LSQUARE_BRACKET	shift 15


	.	error


state 43:

	parameter_declaration_list : parameter_declaration .  (reduce by rule 61)

	RPAREN	reduce by rule 61
	COMMA	reduce by rule 61


	.	error


state 44:

	parameter_declaration_list : parameter_declaration_list . COMMA parameter_declaration 
	function_definition : type_specifier IDENTIFIER LPAREN parameter_declaration_list . RPAREN compound_command 

	RPAREN	shift 74
	COMMA	shift 73


	.	error


state 45:

	function_definition : type_specifier IDENTIFIER LPAREN RPAREN . compound_command 

	LCURLY_BRACKET	shift 76

	compound_command	goto 75

	.	error


state 46:

	multiplicative_expression : multiplicative_expression DIVIDED . unary_minus_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	unary_minus_expression	goto 77
	neg_expression	goto 21

	.	error


state 47:

	multiplicative_expression : multiplicative_expression TIMES . unary_minus_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	unary_minus_expression	goto 78
	neg_expression	goto 21

	.	error


state 48:

	additive_expression : additive_expression MINUS . multiplicative_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	multiplicative_expression	goto 79
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 49:

	additive_expression : additive_expression PLUS . multiplicative_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	multiplicative_expression	goto 80
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 50:

	relational_expression : additive_expression GE_OP . additive_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	additive_expression	goto 81
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 51:

	relational_expression : additive_expression GT_OP . additive_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	additive_expression	goto 82
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 52:

	relational_expression : additive_expression LE_OP . additive_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	additive_expression	goto 83
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 53:

	relational_expression : additive_expression LT_OP . additive_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	additive_expression	goto 84
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 54:

	relational_expression : additive_expression NE_OP . additive_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	additive_expression	goto 85
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 55:

	relational_expression : additive_expression EQ_OP . additive_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	additive_expression	goto 86
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 56:

	logical_and_expression : logical_and_expression AND_OP . relational_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	relational_expression	goto 87
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 57:

	logical_or_expression : logical_or_expression OR_OP . logical_and_expression 

	IDENTIFIER	shift 63
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	array_access	goto 62
	logical_and_expression	goto 88
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 58:

	expression : array_access EQUALS . expression 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 89
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 59:

	array_access : array_access LSQUARE_BRACKET . expression RSQUARE_BRACKET 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 90
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 60:

	declaration : type_specifier IDENTIFIER EQUALS expression SEMICOLON .  (reduce by rule 60)

	EOF	reduce by rule 60
	IF	reduce by rule 60
	WHILE	reduce by rule 60
	RETURN	reduce by rule 60
	SKIP	reduce by rule 60
	VOID	reduce by rule 60
	INT	reduce by rule 60
	REAL	reduce by rule 60
	CHAR	reduce by rule 60
	BOOL	reduce by rule 60
	STRING	reduce by rule 60
	DATASET	reduce by rule 60
	MODEL	reduce by rule 60
	IDENTIFIER	reduce by rule 60
	INT_LITERAL	reduce by rule 60
	REAL_LITERAL	reduce by rule 60
	BOOL_LITERAL	reduce by rule 60
	CHAR_LITERAL	reduce by rule 60
	STRING_LITERAL	reduce by rule 60
	NEG_OP	reduce by rule 60
	LCURLY_BRACKET	reduce by rule 60
	RCURLY_BRACKET	reduce by rule 60
	LPAREN	reduce by rule 60
	SEMICOLON	reduce by rule 60
	MINUS	reduce by rule 60


	.	error


state 61:

	unary_minus_expression : MINUS neg_expression .  (reduce by rule 38)

	OR_OP	reduce by rule 38
	AND_OP	reduce by rule 38
	EQ_OP	reduce by rule 38
	NE_OP	reduce by rule 38
	LT_OP	reduce by rule 38
	LE_OP	reduce by rule 38
	GT_OP	reduce by rule 38
	GE_OP	reduce by rule 38
	RCURLY_BRACKET	reduce by rule 38
	RSQUARE_BRACKET	reduce by rule 38
	RPAREN	reduce by rule 38
	SEMICOLON	reduce by rule 38
	COMMA	reduce by rule 38
	PLUS	reduce by rule 38
	MINUS	reduce by rule 38
	TIMES	reduce by rule 38
	DIVIDED	reduce by rule 38


	.	error


state 62:

	primary_expression : array_access .  (reduce by rule 5)
	array_access : array_access . LSQUARE_BRACKET expression RSQUARE_BRACKET 

	OR_OP	reduce by rule 5
	AND_OP	reduce by rule 5
	EQ_OP	reduce by rule 5
	NE_OP	reduce by rule 5
	LT_OP	reduce by rule 5
	LE_OP	reduce by rule 5
	GT_OP	reduce by rule 5
	GE_OP	reduce by rule 5
	RCURLY_BRACKET	reduce by rule 5
	LSQUARE_BRACKET	shift 59
	RSQUARE_BRACKET	reduce by rule 5
	RPAREN	reduce by rule 5
	SEMICOLON	reduce by rule 5
	COMMA	reduce by rule 5
	PLUS	reduce by rule 5
	MINUS	reduce by rule 5
	TIMES	reduce by rule 5
	DIVIDED	reduce by rule 5


	.	error


state 63:

	primary_expression : IDENTIFIER .  (reduce by rule 0)
	primary_expression : IDENTIFIER . LPAREN RPAREN 
	primary_expression : IDENTIFIER . LPAREN expression_list RPAREN 
	array_access : IDENTIFIER . LSQUARE_BRACKET expression RSQUARE_BRACKET 

	OR_OP	reduce by rule 0
	AND_OP	reduce by rule 0
	EQ_OP	reduce by rule 0
	NE_OP	reduce by rule 0
	LT_OP	reduce by rule 0
	LE_OP	reduce by rule 0
	GT_OP	reduce by rule 0
	GE_OP	reduce by rule 0
	RCURLY_BRACKET	reduce by rule 0
	LSQUARE_BRACKET	shift 71
	RSQUARE_BRACKET	reduce by rule 0
	LPAREN	shift 70
	RPAREN	reduce by rule 0
	SEMICOLON	reduce by rule 0
	COMMA	reduce by rule 0
	PLUS	reduce by rule 0
	MINUS	reduce by rule 0
	TIMES	reduce by rule 0
	DIVIDED	reduce by rule 0


	.	error


state 64:

	primary_expression : LPAREN expression . RPAREN 

	RPAREN	shift 91


	.	error


state 65:

	expression_list : expression .  (reduce by rule 13)

	RCURLY_BRACKET	reduce by rule 13
	RPAREN	reduce by rule 13
	COMMA	reduce by rule 13


	.	error


state 66:

	primary_expression : LCURLY_BRACKET expression_list . RCURLY_BRACKET 
	expression_list : expression_list . COMMA expression 

	RCURLY_BRACKET	shift 93
	COMMA	shift 92


	.	error


state 67:

	primary_expression : LCURLY_BRACKET RCURLY_BRACKET .  (reduce by rule 2)

	OR_OP	reduce by rule 2
	AND_OP	reduce by rule 2
	EQ_OP	reduce by rule 2
	NE_OP	reduce by rule 2
	LT_OP	reduce by rule 2
	LE_OP	reduce by rule 2
	GT_OP	reduce by rule 2
	GE_OP	reduce by rule 2
	RCURLY_BRACKET	reduce by rule 2
	RSQUARE_BRACKET	reduce by rule 2
	RPAREN	reduce by rule 2
	SEMICOLON	reduce by rule 2
	COMMA	reduce by rule 2
	PLUS	reduce by rule 2
	MINUS	reduce by rule 2
	TIMES	reduce by rule 2
	DIVIDED	reduce by rule 2


	.	error


state 68:

	neg_expression : NEG_OP neg_expression .  (reduce by rule 40)

	OR_OP	reduce by rule 40
	AND_OP	reduce by rule 40
	EQ_OP	reduce by rule 40
	NE_OP	reduce by rule 40
	LT_OP	reduce by rule 40
	LE_OP	reduce by rule 40
	GT_OP	reduce by rule 40
	GE_OP	reduce by rule 40
	RCURLY_BRACKET	reduce by rule 40
	RSQUARE_BRACKET	reduce by rule 40
	RPAREN	reduce by rule 40
	SEMICOLON	reduce by rule 40
	COMMA	reduce by rule 40
	PLUS	reduce by rule 40
	MINUS	reduce by rule 40
	TIMES	reduce by rule 40
	DIVIDED	reduce by rule 40


	.	error


state 69:

	expression : IDENTIFIER EQUALS . expression 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 94
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 70:

	primary_expression : IDENTIFIER LPAREN . RPAREN 
	primary_expression : IDENTIFIER LPAREN . expression_list RPAREN 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	RPAREN	shift 96
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression_list	goto 95
	expression	goto 65
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 71:

	array_access : IDENTIFIER LSQUARE_BRACKET . expression RSQUARE_BRACKET 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 97
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 72:

	parameter_declaration : type_specifier IDENTIFIER .  (reduce by rule 63)

	RPAREN	reduce by rule 63
	COMMA	reduce by rule 63


	.	error


state 73:

	parameter_declaration_list : parameter_declaration_list COMMA . parameter_declaration 

	VOID	shift 13
	INT	shift 12
	REAL	shift 11
	CHAR	shift 10
	BOOL	shift 9
	STRING	shift 8
	DATASET	shift 7
	MODEL	shift 6

	parameter_declaration	goto 98
	type_specifier	goto 42

	.	error


state 74:

	function_definition : type_specifier IDENTIFIER LPAREN parameter_declaration_list RPAREN . compound_command 

	LCURLY_BRACKET	shift 76

	compound_command	goto 99

	.	error


state 75:

	function_definition : type_specifier IDENTIFIER LPAREN RPAREN compound_command .  (reduce by rule 73)

	EOF	reduce by rule 73
	VOID	reduce by rule 73
	INT	reduce by rule 73
	REAL	reduce by rule 73
	CHAR	reduce by rule 73
	BOOL	reduce by rule 73
	STRING	reduce by rule 73
	DATASET	reduce by rule 73
	MODEL	reduce by rule 73


	.	error


state 76:

	compound_command : LCURLY_BRACKET . declaration_or_command_list RCURLY_BRACKET 

	IF	shift 116
	WHILE	shift 115
	RETURN	shift 114
	SKIP	shift 113
	VOID	shift 13
	INT	shift 12
	REAL	shift 11
	CHAR	shift 10
	BOOL	shift 9
	STRING	shift 8
	DATASET	shift 7
	MODEL	shift 6
	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 112
	LPAREN	shift 33
	SEMICOLON	shift 111
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 110
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21
	command	goto 109
	compound_command	goto 108
	declaration_or_command_list	goto 107
	declaration_or_command	goto 106
	expression_command	goto 105
	selection_command	goto 104
	iteration_command	goto 103
	jump_command	goto 102
	declaration	goto 101
	type_specifier	goto 100

	.	error


state 77:

	multiplicative_expression : multiplicative_expression DIVIDED unary_minus_expression .  (reduce by rule 36)

	OR_OP	reduce by rule 36
	AND_OP	reduce by rule 36
	EQ_OP	reduce by rule 36
	NE_OP	reduce by rule 36
	LT_OP	reduce by rule 36
	LE_OP	reduce by rule 36
	GT_OP	reduce by rule 36
	GE_OP	reduce by rule 36
	RCURLY_BRACKET	reduce by rule 36
	RSQUARE_BRACKET	reduce by rule 36
	RPAREN	reduce by rule 36
	SEMICOLON	reduce by rule 36
	COMMA	reduce by rule 36
	PLUS	reduce by rule 36
	MINUS	reduce by rule 36
	TIMES	reduce by rule 36
	DIVIDED	reduce by rule 36


	.	error


state 78:

	multiplicative_expression : multiplicative_expression TIMES unary_minus_expression .  (reduce by rule 35)

	OR_OP	reduce by rule 35
	AND_OP	reduce by rule 35
	EQ_OP	reduce by rule 35
	NE_OP	reduce by rule 35
	LT_OP	reduce by rule 35
	LE_OP	reduce by rule 35
	GT_OP	reduce by rule 35
	GE_OP	reduce by rule 35
	RCURLY_BRACKET	reduce by rule 35
	RSQUARE_BRACKET	reduce by rule 35
	RPAREN	reduce by rule 35
	SEMICOLON	reduce by rule 35
	COMMA	reduce by rule 35
	PLUS	reduce by rule 35
	MINUS	reduce by rule 35
	TIMES	reduce by rule 35
	DIVIDED	reduce by rule 35


	.	error


state 79:

	additive_expression : additive_expression MINUS multiplicative_expression .  (reduce by rule 33)
	multiplicative_expression : multiplicative_expression . TIMES unary_minus_expression 
	multiplicative_expression : multiplicative_expression . DIVIDED unary_minus_expression 

	OR_OP	reduce by rule 33
	AND_OP	reduce by rule 33
	EQ_OP	reduce by rule 33
	NE_OP	reduce by rule 33
	LT_OP	reduce by rule 33
	LE_OP	reduce by rule 33
	GT_OP	reduce by rule 33
	GE_OP	reduce by rule 33
	RCURLY_BRACKET	reduce by rule 33
	RSQUARE_BRACKET	reduce by rule 33
	RPAREN	reduce by rule 33
	SEMICOLON	reduce by rule 33
	COMMA	reduce by rule 33
	PLUS	reduce by rule 33
	MINUS	reduce by rule 33
	TIMES	shift 47
	DIVIDED	shift 46


	.	error


state 80:

	additive_expression : additive_expression PLUS multiplicative_expression .  (reduce by rule 32)
	multiplicative_expression : multiplicative_expression . TIMES unary_minus_expression 
	multiplicative_expression : multiplicative_expression . DIVIDED unary_minus_expression 

	OR_OP	reduce by rule 32
	AND_OP	reduce by rule 32
	EQ_OP	reduce by rule 32
	NE_OP	reduce by rule 32
	LT_OP	reduce by rule 32
	LE_OP	reduce by rule 32
	GT_OP	reduce by rule 32
	GE_OP	reduce by rule 32
	RCURLY_BRACKET	reduce by rule 32
	RSQUARE_BRACKET	reduce by rule 32
	RPAREN	reduce by rule 32
	SEMICOLON	reduce by rule 32
	COMMA	reduce by rule 32
	PLUS	reduce by rule 32
	MINUS	reduce by rule 32
	TIMES	shift 47
	DIVIDED	shift 46


	.	error


state 81:

	relational_expression : additive_expression GE_OP additive_expression .  (reduce by rule 28)
	additive_expression : additive_expression . PLUS multiplicative_expression 
	additive_expression : additive_expression . MINUS multiplicative_expression 

	OR_OP	reduce by rule 28
	AND_OP	reduce by rule 28
	RCURLY_BRACKET	reduce by rule 28
	RSQUARE_BRACKET	reduce by rule 28
	RPAREN	reduce by rule 28
	SEMICOLON	reduce by rule 28
	COMMA	reduce by rule 28
	PLUS	shift 49
	MINUS	shift 48


	.	error


state 82:

	relational_expression : additive_expression GT_OP additive_expression .  (reduce by rule 26)
	additive_expression : additive_expression . PLUS multiplicative_expression 
	additive_expression : additive_expression . MINUS multiplicative_expression 

	OR_OP	reduce by rule 26
	AND_OP	reduce by rule 26
	RCURLY_BRACKET	reduce by rule 26
	RSQUARE_BRACKET	reduce by rule 26
	RPAREN	reduce by rule 26
	SEMICOLON	reduce by rule 26
	COMMA	reduce by rule 26
	PLUS	shift 49
	MINUS	shift 48


	.	error


state 83:

	relational_expression : additive_expression LE_OP additive_expression .  (reduce by rule 27)
	additive_expression : additive_expression . PLUS multiplicative_expression 
	additive_expression : additive_expression . MINUS multiplicative_expression 

	OR_OP	reduce by rule 27
	AND_OP	reduce by rule 27
	RCURLY_BRACKET	reduce by rule 27
	RSQUARE_BRACKET	reduce by rule 27
	RPAREN	reduce by rule 27
	SEMICOLON	reduce by rule 27
	COMMA	reduce by rule 27
	PLUS	shift 49
	MINUS	shift 48


	.	error


state 84:

	relational_expression : additive_expression LT_OP additive_expression .  (reduce by rule 25)
	additive_expression : additive_expression . PLUS multiplicative_expression 
	additive_expression : additive_expression . MINUS multiplicative_expression 

	OR_OP	reduce by rule 25
	AND_OP	reduce by rule 25
	RCURLY_BRACKET	reduce by rule 25
	RSQUARE_BRACKET	reduce by rule 25
	RPAREN	reduce by rule 25
	SEMICOLON	reduce by rule 25
	COMMA	reduce by rule 25
	PLUS	shift 49
	MINUS	shift 48


	.	error


state 85:

	relational_expression : additive_expression NE_OP additive_expression .  (reduce by rule 30)
	additive_expression : additive_expression . PLUS multiplicative_expression 
	additive_expression : additive_expression . MINUS multiplicative_expression 

	OR_OP	reduce by rule 30
	AND_OP	reduce by rule 30
	RCURLY_BRACKET	reduce by rule 30
	RSQUARE_BRACKET	reduce by rule 30
	RPAREN	reduce by rule 30
	SEMICOLON	reduce by rule 30
	COMMA	reduce by rule 30
	PLUS	shift 49
	MINUS	shift 48


	.	error


state 86:

	relational_expression : additive_expression EQ_OP additive_expression .  (reduce by rule 29)
	additive_expression : additive_expression . PLUS multiplicative_expression 
	additive_expression : additive_expression . MINUS multiplicative_expression 

	OR_OP	reduce by rule 29
	AND_OP	reduce by rule 29
	RCURLY_BRACKET	reduce by rule 29
	RSQUARE_BRACKET	reduce by rule 29
	RPAREN	reduce by rule 29
	SEMICOLON	reduce by rule 29
	COMMA	reduce by rule 29
	PLUS	shift 49
	MINUS	shift 48


	.	error


state 87:

	logical_and_expression : logical_and_expression AND_OP relational_expression .  (reduce by rule 23)

	OR_OP	reduce by rule 23
	AND_OP	reduce by rule 23
	RCURLY_BRACKET	reduce by rule 23
	RSQUARE_BRACKET	reduce by rule 23
	RPAREN	reduce by rule 23
	SEMICOLON	reduce by rule 23
	COMMA	reduce by rule 23


	.	error


state 88:

	logical_or_expression : logical_or_expression OR_OP logical_and_expression .  (reduce by rule 21)
	logical_and_expression : logical_and_expression . AND_OP relational_expression 

	OR_OP	reduce by rule 21
	AND_OP	shift 56
	RCURLY_BRACKET	reduce by rule 21
	RSQUARE_BRACKET	reduce by rule 21
	RPAREN	reduce by rule 21
	SEMICOLON	reduce by rule 21
	COMMA	reduce by rule 21


	.	error


state 89:

	expression : array_access EQUALS expression .  (reduce by rule 17)

	RCURLY_BRACKET	reduce by rule 17
	RSQUARE_BRACKET	reduce by rule 17
	RPAREN	reduce by rule 17
	SEMICOLON	reduce by rule 17
	COMMA	reduce by rule 17


	.	error


state 90:

	array_access : array_access LSQUARE_BRACKET expression . RSQUARE_BRACKET 

	RSQUARE_BRACKET	shift 117


	.	error


state 91:

	primary_expression : LPAREN expression RPAREN .  (reduce by rule 4)

	OR_OP	reduce by rule 4
	AND_OP	reduce by rule 4
	EQ_OP	reduce by rule 4
	NE_OP	reduce by rule 4
	LT_OP	reduce by rule 4
	LE_OP	reduce by rule 4
	GT_OP	reduce by rule 4
	GE_OP	reduce by rule 4
	RCURLY_BRACKET	reduce by rule 4
	RSQUARE_BRACKET	reduce by rule 4
	RPAREN	reduce by rule 4
	SEMICOLON	reduce by rule 4
	COMMA	reduce by rule 4
	PLUS	reduce by rule 4
	MINUS	reduce by rule 4
	TIMES	reduce by rule 4
	DIVIDED	reduce by rule 4


	.	error


state 92:

	expression_list : expression_list COMMA . expression 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 118
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 93:

	primary_expression : LCURLY_BRACKET expression_list RCURLY_BRACKET .  (reduce by rule 3)

	OR_OP	reduce by rule 3
	AND_OP	reduce by rule 3
	EQ_OP	reduce by rule 3
	NE_OP	reduce by rule 3
	LT_OP	reduce by rule 3
	LE_OP	reduce by rule 3
	GT_OP	reduce by rule 3
	GE_OP	reduce by rule 3
	RCURLY_BRACKET	reduce by rule 3
	RSQUARE_BRACKET	reduce by rule 3
	RPAREN	reduce by rule 3
	SEMICOLON	reduce by rule 3
	COMMA	reduce by rule 3
	PLUS	reduce by rule 3
	MINUS	reduce by rule 3
	TIMES	reduce by rule 3
	DIVIDED	reduce by rule 3


	.	error


state 94:

	expression : IDENTIFIER EQUALS expression .  (reduce by rule 16)

	RCURLY_BRACKET	reduce by rule 16
	RSQUARE_BRACKET	reduce by rule 16
	RPAREN	reduce by rule 16
	SEMICOLON	reduce by rule 16
	COMMA	reduce by rule 16


	.	error


state 95:

	primary_expression : IDENTIFIER LPAREN expression_list . RPAREN 
	expression_list : expression_list . COMMA expression 

	RPAREN	shift 119
	COMMA	shift 92


	.	error


state 96:

	primary_expression : IDENTIFIER LPAREN RPAREN .  (reduce by rule 6)

	OR_OP	reduce by rule 6
	AND_OP	reduce by rule 6
	EQ_OP	reduce by rule 6
	NE_OP	reduce by rule 6
	LT_OP	reduce by rule 6
	LE_OP	reduce by rule 6
	GT_OP	reduce by rule 6
	GE_OP	reduce by rule 6
	RCURLY_BRACKET	reduce by rule 6
	RSQUARE_BRACKET	reduce by rule 6
	RPAREN	reduce by rule 6
	SEMICOLON	reduce by rule 6
	COMMA	reduce by rule 6
	PLUS	reduce by rule 6
	MINUS	reduce by rule 6
	TIMES	reduce by rule 6
	DIVIDED	reduce by rule 6


	.	error


state 97:

	array_access : IDENTIFIER LSQUARE_BRACKET expression . RSQUARE_BRACKET 

	RSQUARE_BRACKET	shift 120


	.	error


state 98:

	parameter_declaration_list : parameter_declaration_list COMMA parameter_declaration .  (reduce by rule 62)

	RPAREN	reduce by rule 62
	COMMA	reduce by rule 62


	.	error


state 99:

	function_definition : type_specifier IDENTIFIER LPAREN parameter_declaration_list RPAREN compound_command .  (reduce by rule 74)

	EOF	reduce by rule 74
	VOID	reduce by rule 74
	INT	reduce by rule 74
	REAL	reduce by rule 74
	CHAR	reduce by rule 74
	BOOL	reduce by rule 74
	STRING	reduce by rule 74
	DATASET	reduce by rule 74
	MODEL	reduce by rule 74


	.	error


state 100:

	declaration : type_specifier . IDENTIFIER SEMICOLON 
	declaration : type_specifier . IDENTIFIER EQUALS expression SEMICOLON 
	type_specifier : type_specifier . LSQUARE_BRACKET RSQUARE_BRACKET 

	IDENTIFIER	shift 121
	LSQUARE_BRACKET	shift 15


	.	error


state 101:

	declaration_or_command : declaration .  (reduce by rule 50)

	IF	reduce by rule 50
	WHILE	reduce by rule 50
	RETURN	reduce by rule 50
	SKIP	reduce by rule 50
	VOID	reduce by rule 50
	INT	reduce by rule 50
	REAL	reduce by rule 50
	CHAR	reduce by rule 50
	BOOL	reduce by rule 50
	STRING	reduce by rule 50
	DATASET	reduce by rule 50
	MODEL	reduce by rule 50
	IDENTIFIER	reduce by rule 50
	INT_LITERAL	reduce by rule 50
	REAL_LITERAL	reduce by rule 50
	BOOL_LITERAL	reduce by rule 50
	CHAR_LITERAL	reduce by rule 50
	STRING_LITERAL	reduce by rule 50
	NEG_OP	reduce by rule 50
	LCURLY_BRACKET	reduce by rule 50
	RCURLY_BRACKET	reduce by rule 50
	LPAREN	reduce by rule 50
	SEMICOLON	reduce by rule 50
	MINUS	reduce by rule 50


	.	error


state 102:

	command : jump_command .  (reduce by rule 45)

	IF	reduce by rule 45
	WHILE	reduce by rule 45
	RETURN	reduce by rule 45
	SKIP	reduce by rule 45
	VOID	reduce by rule 45
	INT	reduce by rule 45
	REAL	reduce by rule 45
	CHAR	reduce by rule 45
	BOOL	reduce by rule 45
	STRING	reduce by rule 45
	DATASET	reduce by rule 45
	MODEL	reduce by rule 45
	IDENTIFIER	reduce by rule 45
	INT_LITERAL	reduce by rule 45
	REAL_LITERAL	reduce by rule 45
	BOOL_LITERAL	reduce by rule 45
	CHAR_LITERAL	reduce by rule 45
	STRING_LITERAL	reduce by rule 45
	NEG_OP	reduce by rule 45
	LCURLY_BRACKET	reduce by rule 45
	RCURLY_BRACKET	reduce by rule 45
	LPAREN	reduce by rule 45
	SEMICOLON	reduce by rule 45
	MINUS	reduce by rule 45


	.	error


state 103:

	command : iteration_command .  (reduce by rule 44)

	IF	reduce by rule 44
	WHILE	reduce by rule 44
	RETURN	reduce by rule 44
	SKIP	reduce by rule 44
	VOID	reduce by rule 44
	INT	reduce by rule 44
	REAL	reduce by rule 44
	CHAR	reduce by rule 44
	BOOL	reduce by rule 44
	STRING	reduce by rule 44
	DATASET	reduce by rule 44
	MODEL	reduce by rule 44
	IDENTIFIER	reduce by rule 44
	INT_LITERAL	reduce by rule 44
	REAL_LITERAL	reduce by rule 44
	BOOL_LITERAL	reduce by rule 44
	CHAR_LITERAL	reduce by rule 44
	STRING_LITERAL	reduce by rule 44
	NEG_OP	reduce by rule 44
	LCURLY_BRACKET	reduce by rule 44
	RCURLY_BRACKET	reduce by rule 44
	LPAREN	reduce by rule 44
	SEMICOLON	reduce by rule 44
	MINUS	reduce by rule 44


	.	error


state 104:

	command : selection_command .  (reduce by rule 43)

	IF	reduce by rule 43
	WHILE	reduce by rule 43
	RETURN	reduce by rule 43
	SKIP	reduce by rule 43
	VOID	reduce by rule 43
	INT	reduce by rule 43
	REAL	reduce by rule 43
	CHAR	reduce by rule 43
	BOOL	reduce by rule 43
	STRING	reduce by rule 43
	DATASET	reduce by rule 43
	MODEL	reduce by rule 43
	IDENTIFIER	reduce by rule 43
	INT_LITERAL	reduce by rule 43
	REAL_LITERAL	reduce by rule 43
	BOOL_LITERAL	reduce by rule 43
	CHAR_LITERAL	reduce by rule 43
	STRING_LITERAL	reduce by rule 43
	NEG_OP	reduce by rule 43
	LCURLY_BRACKET	reduce by rule 43
	RCURLY_BRACKET	reduce by rule 43
	LPAREN	reduce by rule 43
	SEMICOLON	reduce by rule 43
	MINUS	reduce by rule 43


	.	error


state 105:

	command : expression_command .  (reduce by rule 42)

	IF	reduce by rule 42
	WHILE	reduce by rule 42
	RETURN	reduce by rule 42
	SKIP	reduce by rule 42
	VOID	reduce by rule 42
	INT	reduce by rule 42
	REAL	reduce by rule 42
	CHAR	reduce by rule 42
	BOOL	reduce by rule 42
	STRING	reduce by rule 42
	DATASET	reduce by rule 42
	MODEL	reduce by rule 42
	IDENTIFIER	reduce by rule 42
	INT_LITERAL	reduce by rule 42
	REAL_LITERAL	reduce by rule 42
	BOOL_LITERAL	reduce by rule 42
	CHAR_LITERAL	reduce by rule 42
	STRING_LITERAL	reduce by rule 42
	NEG_OP	reduce by rule 42
	LCURLY_BRACKET	reduce by rule 42
	RCURLY_BRACKET	reduce by rule 42
	LPAREN	reduce by rule 42
	SEMICOLON	reduce by rule 42
	MINUS	reduce by rule 42


	.	error


state 106:

	declaration_or_command_list : declaration_or_command .  (reduce by rule 48)

	IF	reduce by rule 48
	WHILE	reduce by rule 48
	RETURN	reduce by rule 48
	SKIP	reduce by rule 48
	VOID	reduce by rule 48
	INT	reduce by rule 48
	REAL	reduce by rule 48
	CHAR	reduce by rule 48
	BOOL	reduce by rule 48
	STRING	reduce by rule 48
	DATASET	reduce by rule 48
	MODEL	reduce by rule 48
	IDENTIFIER	reduce by rule 48
	INT_LITERAL	reduce by rule 48
	REAL_LITERAL	reduce by rule 48
	BOOL_LITERAL	reduce by rule 48
	CHAR_LITERAL	reduce by rule 48
	STRING_LITERAL	reduce by rule 48
	NEG_OP	reduce by rule 48
	LCURLY_BRACKET	reduce by rule 48
	RCURLY_BRACKET	reduce by rule 48
	LPAREN	reduce by rule 48
	SEMICOLON	reduce by rule 48
	MINUS	reduce by rule 48


	.	error


state 107:

	compound_command : LCURLY_BRACKET declaration_or_command_list . RCURLY_BRACKET 
	declaration_or_command_list : declaration_or_command_list . declaration_or_command 

	IF	shift 116
	WHILE	shift 115
	RETURN	shift 114
	SKIP	shift 113
	VOID	shift 13
	INT	shift 12
	REAL	shift 11
	CHAR	shift 10
	BOOL	shift 9
	STRING	shift 8
	DATASET	shift 7
	MODEL	shift 6
	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 112
	RCURLY_BRACKET	shift 123
	LPAREN	shift 33
	SEMICOLON	shift 111
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 110
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21
	command	goto 109
	compound_command	goto 108
	declaration_or_command	goto 122
	expression_command	goto 105
	selection_command	goto 104
	iteration_command	goto 103
	jump_command	goto 102
	declaration	goto 101
	type_specifier	goto 100

	.	error


state 108:

	command : compound_command .  (reduce by rule 41)

	IF	reduce by rule 41
	WHILE	reduce by rule 41
	RETURN	reduce by rule 41
	SKIP	reduce by rule 41
	VOID	reduce by rule 41
	INT	reduce by rule 41
	REAL	reduce by rule 41
	CHAR	reduce by rule 41
	BOOL	reduce by rule 41
	STRING	reduce by rule 41
	DATASET	reduce by rule 41
	MODEL	reduce by rule 41
	IDENTIFIER	reduce by rule 41
	INT_LITERAL	reduce by rule 41
	REAL_LITERAL	reduce by rule 41
	BOOL_LITERAL	reduce by rule 41
	CHAR_LITERAL	reduce by rule 41
	STRING_LITERAL	reduce by rule 41
	NEG_OP	reduce by rule 41
	LCURLY_BRACKET	reduce by rule 41
	RCURLY_BRACKET	reduce by rule 41
	LPAREN	reduce by rule 41
	SEMICOLON	reduce by rule 41
	MINUS	reduce by rule 41


	.	error


state 109:

	declaration_or_command : command .  (reduce by rule 51)

	IF	reduce by rule 51
	WHILE	reduce by rule 51
	RETURN	reduce by rule 51
	SKIP	reduce by rule 51
	VOID	reduce by rule 51
	INT	reduce by rule 51
	REAL	reduce by rule 51
	CHAR	reduce by rule 51
	BOOL	reduce by rule 51
	STRING	reduce by rule 51
	DATASET	reduce by rule 51
	MODEL	reduce by rule 51
	IDENTIFIER	reduce by rule 51
	INT_LITERAL	reduce by rule 51
	REAL_LITERAL	reduce by rule 51
	BOOL_LITERAL	reduce by rule 51
	CHAR_LITERAL	reduce by rule 51
	STRING_LITERAL	reduce by rule 51
	NEG_OP	reduce by rule 51
	LCURLY_BRACKET	reduce by rule 51
	RCURLY_BRACKET	reduce by rule 51
	LPAREN	reduce by rule 51
	SEMICOLON	reduce by rule 51
	MINUS	reduce by rule 51


	.	error


state 110:

	expression_command : expression . SEMICOLON 

	SEMICOLON	shift 124


	.	error


state 111:

	expression_command : SEMICOLON .  (reduce by rule 52)

	IF	reduce by rule 52
	WHILE	reduce by rule 52
	RETURN	reduce by rule 52
	SKIP	reduce by rule 52
	VOID	reduce by rule 52
	INT	reduce by rule 52
	REAL	reduce by rule 52
	CHAR	reduce by rule 52
	BOOL	reduce by rule 52
	STRING	reduce by rule 52
	DATASET	reduce by rule 52
	MODEL	reduce by rule 52
	IDENTIFIER	reduce by rule 52
	INT_LITERAL	reduce by rule 52
	REAL_LITERAL	reduce by rule 52
	BOOL_LITERAL	reduce by rule 52
	CHAR_LITERAL	reduce by rule 52
	STRING_LITERAL	reduce by rule 52
	NEG_OP	reduce by rule 52
	LCURLY_BRACKET	reduce by rule 52
	RCURLY_BRACKET	reduce by rule 52
	LPAREN	reduce by rule 52
	SEMICOLON	reduce by rule 52
	MINUS	reduce by rule 52


	.	error


state 112:

	primary_expression : LCURLY_BRACKET . RCURLY_BRACKET 
	primary_expression : LCURLY_BRACKET . expression_list RCURLY_BRACKET 
	compound_command : LCURLY_BRACKET . declaration_or_command_list RCURLY_BRACKET 

	IF	shift 116
	WHILE	shift 115
	RETURN	shift 114
	SKIP	shift 113
	VOID	shift 13
	INT	shift 12
	REAL	shift 11
	CHAR	shift 10
	BOOL	shift 9
	STRING	shift 8
	DATASET	shift 7
	MODEL	shift 6
	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 112
	RCURLY_BRACKET	shift 67
	LPAREN	shift 33
	SEMICOLON	shift 111
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression_list	goto 66
	expression	goto 125
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21
	command	goto 109
	compound_command	goto 108
	declaration_or_command_list	goto 107
	declaration_or_command	goto 106
	expression_command	goto 105
	selection_command	goto 104
	iteration_command	goto 103
	jump_command	goto 102
	declaration	goto 101
	type_specifier	goto 100

	.	error


state 113:

	command : SKIP . SEMICOLON 

	SEMICOLON	shift 126


	.	error


state 114:

	jump_command : RETURN . SEMICOLON 
	jump_command : RETURN . expression SEMICOLON 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	SEMICOLON	shift 128
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 127
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 115:

	iteration_command : WHILE . LPAREN expression RPAREN command 

	LPAREN	shift 129


	.	error


state 116:

	selection_command : IF . LPAREN expression RPAREN compound_command ELSE compound_command 
	selection_command : IF . LPAREN expression RPAREN compound_command 

	LPAREN	shift 130


	.	error


state 117:

	array_access : array_access LSQUARE_BRACKET expression RSQUARE_BRACKET .  (reduce by rule 19)

	OR_OP	reduce by rule 19
	AND_OP	reduce by rule 19
	EQ_OP	reduce by rule 19
	NE_OP	reduce by rule 19
	LT_OP	reduce by rule 19
	LE_OP	reduce by rule 19
	GT_OP	reduce by rule 19
	GE_OP	reduce by rule 19
	RCURLY_BRACKET	reduce by rule 19
	LSQUARE_BRACKET	reduce by rule 19
	RSQUARE_BRACKET	reduce by rule 19
	RPAREN	reduce by rule 19
	SEMICOLON	reduce by rule 19
	COMMA	reduce by rule 19
	EQUALS	reduce by rule 19
	PLUS	reduce by rule 19
	MINUS	reduce by rule 19
	TIMES	reduce by rule 19
	DIVIDED	reduce by rule 19


	.	error


state 118:

	expression_list : expression_list COMMA expression .  (reduce by rule 14)

	RCURLY_BRACKET	reduce by rule 14
	RPAREN	reduce by rule 14
	COMMA	reduce by rule 14


	.	error


state 119:

	primary_expression : IDENTIFIER LPAREN expression_list RPAREN .  (reduce by rule 7)

	OR_OP	reduce by rule 7
	AND_OP	reduce by rule 7
	EQ_OP	reduce by rule 7
	NE_OP	reduce by rule 7
	LT_OP	reduce by rule 7
	LE_OP	reduce by rule 7
	GT_OP	reduce by rule 7
	GE_OP	reduce by rule 7
	RCURLY_BRACKET	reduce by rule 7
	RSQUARE_BRACKET	reduce by rule 7
	RPAREN	reduce by rule 7
	SEMICOLON	reduce by rule 7
	COMMA	reduce by rule 7
	PLUS	reduce by rule 7
	MINUS	reduce by rule 7
	TIMES	reduce by rule 7
	DIVIDED	reduce by rule 7


	.	error


state 120:

	array_access : IDENTIFIER LSQUARE_BRACKET expression RSQUARE_BRACKET .  (reduce by rule 18)

	OR_OP	reduce by rule 18
	AND_OP	reduce by rule 18
	EQ_OP	reduce by rule 18
	NE_OP	reduce by rule 18
	LT_OP	reduce by rule 18
	LE_OP	reduce by rule 18
	GT_OP	reduce by rule 18
	GE_OP	reduce by rule 18
	RCURLY_BRACKET	reduce by rule 18
	LSQUARE_BRACKET	reduce by rule 18
	RSQUARE_BRACKET	reduce by rule 18
	RPAREN	reduce by rule 18
	SEMICOLON	reduce by rule 18
	COMMA	reduce by rule 18
	EQUALS	reduce by rule 18
	PLUS	reduce by rule 18
	MINUS	reduce by rule 18
	TIMES	reduce by rule 18
	DIVIDED	reduce by rule 18


	.	error


state 121:

	declaration : type_specifier IDENTIFIER . SEMICOLON 
	declaration : type_specifier IDENTIFIER . EQUALS expression SEMICOLON 

	SEMICOLON	shift 19
	EQUALS	shift 18


	.	error


state 122:

	declaration_or_command_list : declaration_or_command_list declaration_or_command .  (reduce by rule 49)

	IF	reduce by rule 49
	WHILE	reduce by rule 49
	RETURN	reduce by rule 49
	SKIP	reduce by rule 49
	VOID	reduce by rule 49
	INT	reduce by rule 49
	REAL	reduce by rule 49
	CHAR	reduce by rule 49
	BOOL	reduce by rule 49
	STRING	reduce by rule 49
	DATASET	reduce by rule 49
	MODEL	reduce by rule 49
	IDENTIFIER	reduce by rule 49
	INT_LITERAL	reduce by rule 49
	REAL_LITERAL	reduce by rule 49
	BOOL_LITERAL	reduce by rule 49
	CHAR_LITERAL	reduce by rule 49
	STRING_LITERAL	reduce by rule 49
	NEG_OP	reduce by rule 49
	LCURLY_BRACKET	reduce by rule 49
	RCURLY_BRACKET	reduce by rule 49
	LPAREN	reduce by rule 49
	SEMICOLON	reduce by rule 49
	MINUS	reduce by rule 49


	.	error


state 123:

	compound_command : LCURLY_BRACKET declaration_or_command_list RCURLY_BRACKET .  (reduce by rule 47)

	EOF	reduce by rule 47
	IF	reduce by rule 47
	ELSE	reduce by rule 47
	WHILE	reduce by rule 47
	RETURN	reduce by rule 47
	SKIP	reduce by rule 47
	VOID	reduce by rule 47
	INT	reduce by rule 47
	REAL	reduce by rule 47
	CHAR	reduce by rule 47
	BOOL	reduce by rule 47
	STRING	reduce by rule 47
	DATASET	reduce by rule 47
	MODEL	reduce by rule 47
	IDENTIFIER	reduce by rule 47
	INT_LITERAL	reduce by rule 47
	REAL_LITERAL	reduce by rule 47
	BOOL_LITERAL	reduce by rule 47
	CHAR_LITERAL	reduce by rule 47
	STRING_LITERAL	reduce by rule 47
	NEG_OP	reduce by rule 47
	LCURLY_BRACKET	reduce by rule 47
	RCURLY_BRACKET	reduce by rule 47
	LPAREN	reduce by rule 47
	SEMICOLON	reduce by rule 47
	MINUS	reduce by rule 47


	.	error


state 124:

	expression_command : expression SEMICOLON .  (reduce by rule 53)

	IF	reduce by rule 53
	WHILE	reduce by rule 53
	RETURN	reduce by rule 53
	SKIP	reduce by rule 53
	VOID	reduce by rule 53
	INT	reduce by rule 53
	REAL	reduce by rule 53
	CHAR	reduce by rule 53
	BOOL	reduce by rule 53
	STRING	reduce by rule 53
	DATASET	reduce by rule 53
	MODEL	reduce by rule 53
	IDENTIFIER	reduce by rule 53
	INT_LITERAL	reduce by rule 53
	REAL_LITERAL	reduce by rule 53
	BOOL_LITERAL	reduce by rule 53
	CHAR_LITERAL	reduce by rule 53
	STRING_LITERAL	reduce by rule 53
	NEG_OP	reduce by rule 53
	LCURLY_BRACKET	reduce by rule 53
	RCURLY_BRACKET	reduce by rule 53
	LPAREN	reduce by rule 53
	SEMICOLON	reduce by rule 53
	MINUS	reduce by rule 53


	.	error


state 125:

	expression_list : expression .  (reduce by rule 13)
	expression_command : expression . SEMICOLON 

	RCURLY_BRACKET	reduce by rule 13
	SEMICOLON	shift 124
	COMMA	reduce by rule 13


	.	error


state 126:

	command : SKIP SEMICOLON .  (reduce by rule 46)

	IF	reduce by rule 46
	WHILE	reduce by rule 46
	RETURN	reduce by rule 46
	SKIP	reduce by rule 46
	VOID	reduce by rule 46
	INT	reduce by rule 46
	REAL	reduce by rule 46
	CHAR	reduce by rule 46
	BOOL	reduce by rule 46
	STRING	reduce by rule 46
	DATASET	reduce by rule 46
	MODEL	reduce by rule 46
	IDENTIFIER	reduce by rule 46
	INT_LITERAL	reduce by rule 46
	REAL_LITERAL	reduce by rule 46
	BOOL_LITERAL	reduce by rule 46
	CHAR_LITERAL	reduce by rule 46
	STRING_LITERAL	reduce by rule 46
	NEG_OP	reduce by rule 46
	LCURLY_BRACKET	reduce by rule 46
	RCURLY_BRACKET	reduce by rule 46
	LPAREN	reduce by rule 46
	SEMICOLON	reduce by rule 46
	MINUS	reduce by rule 46


	.	error


state 127:

	jump_command : RETURN expression . SEMICOLON 

	SEMICOLON	shift 131


	.	error


state 128:

	jump_command : RETURN SEMICOLON .  (reduce by rule 57)

	IF	reduce by rule 57
	WHILE	reduce by rule 57
	RETURN	reduce by rule 57
	SKIP	reduce by rule 57
	VOID	reduce by rule 57
	INT	reduce by rule 57
	REAL	reduce by rule 57
	CHAR	reduce by rule 57
	BOOL	reduce by rule 57
	STRING	reduce by rule 57
	DATASET	reduce by rule 57
	MODEL	reduce by rule 57
	IDENTIFIER	reduce by rule 57
	INT_LITERAL	reduce by rule 57
	REAL_LITERAL	reduce by rule 57
	BOOL_LITERAL	reduce by rule 57
	CHAR_LITERAL	reduce by rule 57
	STRING_LITERAL	reduce by rule 57
	NEG_OP	reduce by rule 57
	LCURLY_BRACKET	reduce by rule 57
	RCURLY_BRACKET	reduce by rule 57
	LPAREN	reduce by rule 57
	SEMICOLON	reduce by rule 57
	MINUS	reduce by rule 57


	.	error


state 129:

	iteration_command : WHILE LPAREN . expression RPAREN command 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 132
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 130:

	selection_command : IF LPAREN . expression RPAREN compound_command ELSE compound_command 
	selection_command : IF LPAREN . expression RPAREN compound_command 

	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 34
	LPAREN	shift 33
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 133
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21

	.	error


state 131:

	jump_command : RETURN expression SEMICOLON .  (reduce by rule 58)

	IF	reduce by rule 58
	WHILE	reduce by rule 58
	RETURN	reduce by rule 58
	SKIP	reduce by rule 58
	VOID	reduce by rule 58
	INT	reduce by rule 58
	REAL	reduce by rule 58
	CHAR	reduce by rule 58
	BOOL	reduce by rule 58
	STRING	reduce by rule 58
	DATASET	reduce by rule 58
	MODEL	reduce by rule 58
	IDENTIFIER	reduce by rule 58
	INT_LITERAL	reduce by rule 58
	REAL_LITERAL	reduce by rule 58
	BOOL_LITERAL	reduce by rule 58
	CHAR_LITERAL	reduce by rule 58
	STRING_LITERAL	reduce by rule 58
	NEG_OP	reduce by rule 58
	LCURLY_BRACKET	reduce by rule 58
	RCURLY_BRACKET	reduce by rule 58
	LPAREN	reduce by rule 58
	SEMICOLON	reduce by rule 58
	MINUS	reduce by rule 58


	.	error


state 132:

	iteration_command : WHILE LPAREN expression . RPAREN command 

	RPAREN	shift 134


	.	error


state 133:

	selection_command : IF LPAREN expression . RPAREN compound_command ELSE compound_command 
	selection_command : IF LPAREN expression . RPAREN compound_command 

	RPAREN	shift 135


	.	error


state 134:

	iteration_command : WHILE LPAREN expression RPAREN . command 

	IF	shift 116
	WHILE	shift 115
	RETURN	shift 114
	SKIP	shift 113
	IDENTIFIER	shift 41
	INT_LITERAL	shift 40
	REAL_LITERAL	shift 39
	BOOL_LITERAL	shift 38
	CHAR_LITERAL	shift 37
	STRING_LITERAL	shift 36
	NEG_OP	shift 35
	LCURLY_BRACKET	shift 112
	LPAREN	shift 33
	SEMICOLON	shift 111
	MINUS	shift 32

	primary_expression	goto 31
	literal	goto 30
	expression	goto 110
	array_access	goto 28
	logical_or_expression	goto 27
	logical_and_expression	goto 26
	relational_expression	goto 25
	additive_expression	goto 24
	multiplicative_expression	goto 23
	unary_minus_expression	goto 22
	neg_expression	goto 21
	command	goto 136
	compound_command	goto 108
	expression_command	goto 105
	selection_command	goto 104
	iteration_command	goto 103
	jump_command	goto 102

	.	error


state 135:

	selection_command : IF LPAREN expression RPAREN . compound_command ELSE compound_command 
	selection_command : IF LPAREN expression RPAREN . compound_command 

	LCURLY_BRACKET	shift 76

	compound_command	goto 137

	.	error


state 136:

	iteration_command : WHILE LPAREN expression RPAREN command .  (reduce by rule 56)

	IF	reduce by rule 56
	WHILE	reduce by rule 56
	RETURN	reduce by rule 56
	SKIP	reduce by rule 56
	VOID	reduce by rule 56
	INT	reduce by rule 56
	REAL	reduce by rule 56
	CHAR	reduce by rule 56
	BOOL	reduce by rule 56
	STRING	reduce by rule 56
	DATASET	reduce by rule 56
	MODEL	reduce by rule 56
	IDENTIFIER	reduce by rule 56
	INT_LITERAL	reduce by rule 56
	REAL_LITERAL	reduce by rule 56
	BOOL_LITERAL	reduce by rule 56
	CHAR_LITERAL	reduce by rule 56
	STRING_LITERAL	reduce by rule 56
	NEG_OP	reduce by rule 56
	LCURLY_BRACKET	reduce by rule 56
	RCURLY_BRACKET	reduce by rule 56
	LPAREN	reduce by rule 56
	SEMICOLON	reduce by rule 56
	MINUS	reduce by rule 56


	.	error


state 137:

	selection_command : IF LPAREN expression RPAREN compound_command . ELSE compound_command 
	selection_command : IF LPAREN expression RPAREN compound_command .  (reduce by rule 55)

	IF	reduce by rule 55
	ELSE	shift 138
	WHILE	reduce by rule 55
	RETURN	reduce by rule 55
	SKIP	reduce by rule 55
	VOID	reduce by rule 55
	INT	reduce by rule 55
	REAL	reduce by rule 55
	CHAR	reduce by rule 55
	BOOL	reduce by rule 55
	STRING	reduce by rule 55
	DATASET	reduce by rule 55
	MODEL	reduce by rule 55
	IDENTIFIER	reduce by rule 55
	INT_LITERAL	reduce by rule 55
	REAL_LITERAL	reduce by rule 55
	BOOL_LITERAL	reduce by rule 55
	CHAR_LITERAL	reduce by rule 55
	STRING_LITERAL	reduce by rule 55
	NEG_OP	reduce by rule 55
	LCURLY_BRACKET	reduce by rule 55
	RCURLY_BRACKET	reduce by rule 55
	LPAREN	reduce by rule 55
	SEMICOLON	reduce by rule 55
	MINUS	reduce by rule 55


	.	error


state 138:

	selection_command : IF LPAREN expression RPAREN compound_command ELSE . compound_command 

	LCURLY_BRACKET	shift 76

	compound_command	goto 139

	.	error


state 139:

	selection_command : IF LPAREN expression RPAREN compound_command ELSE compound_command .  (reduce by rule 54)

	IF	reduce by rule 54
	WHILE	reduce by rule 54
	RETURN	reduce by rule 54
	SKIP	reduce by rule 54
	VOID	reduce by rule 54
	INT	reduce by rule 54
	REAL	reduce by rule 54
	CHAR	reduce by rule 54
	BOOL	reduce by rule 54
	STRING	reduce by rule 54
	DATASET	reduce by rule 54
	MODEL	reduce by rule 54
	IDENTIFIER	reduce by rule 54
	INT_LITERAL	reduce by rule 54
	REAL_LITERAL	reduce by rule 54
	BOOL_LITERAL	reduce by rule 54
	CHAR_LITERAL	reduce by rule 54
	STRING_LITERAL	reduce by rule 54
	NEG_OP	reduce by rule 54
	LCURLY_BRACKET	reduce by rule 54
	RCURLY_BRACKET	reduce by rule 54
	LPAREN	reduce by rule 54
	SEMICOLON	reduce by rule 54
	MINUS	reduce by rule 54


	.	error


state 140:


	EOF	accept


	.	error

1361 of 1712 action table entries left after compaction
322 goto table entries
