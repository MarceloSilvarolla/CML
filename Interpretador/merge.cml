
// Merges two subarrays of arr[].
// First subarray is arr[l..m]
// Second subarray is arr[m+1..r]
int[] merge(int[] arr, int l, int m, int r)
{
    // Find sizes of two subarrays to be merged
    int n1 = m - l + 1;
    int n2 = r - m;

    /* Create temp arrays */
    int[] L = {0, 0, 0, 0, 0, 0, 0, 0};
    int[] R = {0, 0, 0, 0, 0, 0, 0, 0};

    /*Copy data to temp arrays*/
    int p = 0;
    while(p < n1){
        L[p] = arr[l + p];
        p = p + 1;        
    }
    int q = 0;
    while(q < n2){
        R[q] = arr[m + 1+ q];
        q = q + 1;        
    }

    // for (int i=0; i<n1; ++i)
    //     L[i] = arr[l + i];
    // for (int j=0; j<n2; ++j)
    //     R[j] = arr[m + 1+ j];


    /* Merge the temp arrays */

    // Initial indexes of first and second subarrays
    int i = 0;
    int j = 0;

    // Initial index of merged subarry array
    int k = l;
    while (i < n1 && j < n2)
    {
        if (L[i] <= R[j])
        {
            arr[k] = L[i];
            i = i + 1;
        }
        else
        {
            arr[k] = R[j];
            j = j+1;
        }
        k = k + 1;
    }

    /* Copy remaining elements of L[] if any */
    while (i < n1)
    {
        arr[k] = L[i];
        i = i + 1;
        k = k + 1;
    }

    /* Copy remaining elements of R[] if any */
    while (j < n2)
    {
        arr[k] = R[j];
        j =  j + 1;
        k = k + 1;
    }

    return arr;
}

// Main function that sorts arr[l..r] using
// merge()
int[] sort(int[] arr, int l, int r)
{
    if (l < r)
    {
        // Find the middle point
        int m = (l+r)/2;

        // Sort first and second halves
        arr = sort(arr, l, m);
        arr = sort(arr , m+1, r);

        // Merge the sorted halves
        arr = merge(arr, l, m, r);
    }

    return arr;
}

/* A utility function to print array of size n */
void printArray(int[] arr, int length)
{
    int n = length;
    int i = 0;
    while (i < n){
        print(arr[i]);
        print(" ");
        i = i + 1;
    }
    println(" ");
}

// Driver method
int main()
{
    int length = 12;
    int[] arr = {12, 11, 13, 5, 6, 7, 3, 9, 14, 10, 1, 3};

    println("Given Array");
    printArray(arr, length);

    int[] sortedArr = sort(arr, 0, length-1);

    println("Sorted array");
    printArray(sortedArr, length);

    return 0;
}

/* This code is contributed by Rajat Mishra */
